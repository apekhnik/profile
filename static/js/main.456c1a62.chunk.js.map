{"version":3,"sources":["logo.svg","redux/reducers/appReducer.ts","components/FullCV/Contact.tsx","components/FullCV/Education.tsx","components/FullCV/Skills.tsx","components/FullCV/LeftSide.tsx","components/FullCV/RightSide.tsx","react.svg","typescript.svg","redux.svg","components/AboutMe.tsx","components/FullCV/FullCV.tsx","redux/store.ts","components/WelcomePage/WelcomPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["SET_SHOW_INFO_PAGE_TRUE","SET_SHOW_INFO_PAGE_FALSE","initialState","showInfoPage","lang","cnahgeLang","type","payload","appReducer","state","action","blockTitle","title","color","className","style","contactOptions","Icon","Contacts","language","useSelector","app","MailRoundedIcon","PhoneCallbackIcon","LanguageIcon","PlaceIcon","Education","education","educationList","master","univer","place","town","year","bachelor","listOfSkill","SkillsList","props","skills","map","item","index","Skills","LeftSide","Avatar","src","Contact","snapchatRu","snapchatEng","linkedinRu","linkedinEng","nasareactEng","nasareactRu","coctailapiEng","propsforCoctail","description","date","textRu","textEng","git","propsForNasa","propsForSnap","propsForLinked","ExpItem","text","href","rel","target","RightSide","logo","alt","AboutMe","article","transform","showAbout","reactLogo","ts","redux","FullCV","useState","setShouAbout","dispatch","useDispatch","ButtonGroup","disableElevation","variant","orientation","Button","onClick","rootReducer","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","WelcomePage","isOpen","x","useSpring","config","molasses","pointerEvents","overflow","div","interpolate","params","particles","number","value","density","enable","value_area","shape","stroke","width","polygon","nb_sides","image","height","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","push","particles_nb","remove","retina_detect","element","App","btnClass","toggleShow","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.456c1a62.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const SET_SHOW_INFO_PAGE_TRUE = 'SET_SHOW_INFO_PAGE_TRUE',\r\n    SET_SHOW_INFO_PAGE_FALSE = 'SET_SHOW_INFO_PAGE_FALSE'\r\ntype initialStateType = {\r\n    showInfoPage: boolean\r\n    lang: string\r\n}\r\nconst initialState: initialStateType = {\r\n    showInfoPage: true,\r\n    lang: 'eng'\r\n};\r\n\r\nconst appReducer = (state = initialState, action: any): initialStateType => {\r\n    switch (action.type) {\r\n        case SET_SHOW_INFO_PAGE_TRUE:\r\n            return {\r\n                ...state,\r\n                showInfoPage: true\r\n            }\r\n        case SET_SHOW_INFO_PAGE_FALSE:\r\n            return {\r\n                ...state,\r\n                showInfoPage: false\r\n            }\r\n        case 'TOOGLE_INFO':\r\n            return {\r\n                ...state,\r\n                showInfoPage: action.payload\r\n            }\r\n        case 'CHANGE_LANGUAGE':\r\n            return {\r\n                ...state,\r\n                lang: action.payload\r\n            }\r\n        default:\r\n            break;\r\n    }\r\n    return state;\r\n};\r\ntype setInfoShowTrueType = {\r\n    type: typeof SET_SHOW_INFO_PAGE_TRUE\r\n}\r\nexport const cnahgeLang = (lang: string) => ({ type: 'CHANGE_LANGUAGE', payload: lang })\r\nexport const setInfoShow = (): setInfoShowTrueType => ({ type: SET_SHOW_INFO_PAGE_TRUE })\r\ntype setInfoShowFalseType = {\r\n    type: typeof SET_SHOW_INFO_PAGE_FALSE\r\n}\r\nexport const setInfoHide = (): setInfoShowFalseType => ({ type: SET_SHOW_INFO_PAGE_FALSE })\r\nexport default appReducer;\r\n","import React from 'react'\r\nimport MailRoundedIcon from '@material-ui/icons/MailRounded';\r\nimport PhoneCallbackIcon from '@material-ui/icons/PhoneCallback';\r\nimport LanguageIcon from '@material-ui/icons/Language';\r\nimport PlaceIcon from '@material-ui/icons/Place';\r\nimport { useSelector } from 'react-redux';\r\nimport { AppstateType } from '../../redux/store';\r\n\r\nexport const blockTitle = (title: string, color?: string) => (\r\n    <h2 className='blockTitle__h2' style={{ color: color }}>{title}</h2>\r\n)\r\nexport const contactOptions = (Icon: any, title: string) => {\r\n    return (\r\n        <div className='contacts__option' >\r\n            <Icon />\r\n            <span>{title}</span>\r\n        </div>\r\n    )\r\n}\r\nconst Contacts: React.FC = () => {\r\n    const language = useSelector((state: AppstateType) => state.app.lang)\r\n    return (\r\n        <div className='contacts'>\r\n            {blockTitle(language === 'Ru' ? 'Контакты' : 'CONTACT')}\r\n            <div className='contacts__items'>\r\n                {contactOptions(MailRoundedIcon, 'email')}\r\n                {contactOptions(PhoneCallbackIcon, '+3 8066 597 2309')}\r\n                {contactOptions(LanguageIcon, 'Kalinina 31/1')}\r\n                {contactOptions(PlaceIcon, 'github.com')}\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Contacts","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { AppstateType } from '../../redux/store'\r\nimport { blockTitle, } from './Contact'\r\nimport './index.css'\r\n\r\nconst Education: React.FC = () => {\r\n    const language = useSelector((state: AppstateType) => state.app.lang)\r\n    const education = language === 'Ru' ? 'Образование' : 'EDUCATION'\r\n    const educationList = {\r\n        master: {\r\n            title: language === 'Ru' ? 'Магистр' : 'Master Of Science',\r\n            univer: language === 'Ru' ? 'ДНУ им. Олеся Гончара' : 'DNU  Olesya Gonchara',\r\n            place: {\r\n                town: 'Dnipro',\r\n                year: '2013-2014'\r\n            }\r\n        },\r\n        bachelor: {\r\n            title: language === 'Ru' ? 'Бакалавр' : 'Bachelor of arts',\r\n            univer: language === 'Ru' ? 'ДНУ им. Олеся Гончара' : 'DNU  Olesya Gonchara',\r\n            place: {\r\n                town: 'Dnipro',\r\n                year: '2009-2013'\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <div className='education'>\r\n            {blockTitle(education)}\r\n            <div className=\"edication__item\">\r\n                <h3>{educationList.master.title}</h3>\r\n                <p>{educationList.master.univer}</p>\r\n                <p>{educationList.master.place.town}/ <span>{educationList.master.place.year}</span></p>\r\n            </div>\r\n            <div className=\"edication__item\">\r\n                <h3>{educationList.bachelor.title}</h3>\r\n                <p>{educationList.bachelor.univer}</p>\r\n                <p>{educationList.bachelor.place.town}/ <span>{educationList.bachelor.place.year}</span></p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Education","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { AppstateType } from '../../redux/store'\r\nimport { blockTitle, } from './Contact'\r\ntype SkillsListType = {\r\n    skills: string[]\r\n}\r\nconst listOfSkill = ['React', 'TYPESCRIPT', 'React Native', 'NextJS', 'Thunk/Saga', 'React-Spring', 'MaterialUi', 'SASS',]\r\nconst SkillsList = (props: SkillsListType) => {\r\n    return <div className='skills__list'>\r\n        <ul>\r\n            {props.skills.map((item, index) => {\r\n                return <li key={index}>{item}</li>\r\n            })}\r\n        </ul>\r\n    </div>\r\n}\r\nconst Skills: React.FC = () => {\r\n    const language = useSelector((state: AppstateType) => state.app.lang)\r\n    return (\r\n        <div className='skills'>\r\n            {blockTitle(language === 'Ru' ? 'Навыки' : 'SKILLS')}\r\n            <SkillsList skills={listOfSkill} />\r\n        </div>\r\n    )\r\n}\r\nexport default Skills","import React from 'react'\r\nimport { Avatar } from '@material-ui/core';\r\nimport Contacts from './Contact';\r\nimport Education from './Education'\r\nimport Skills from './Skills';\r\nconst avatarsrc = 'https://avatars.githubusercontent.com/u/22451934?s=460&u=c3a662255d6f626d225c02bb39dbe2955457d1db&v=4'\r\nconst LeftSide: React.FC = () => {\r\n    return (\r\n        <div className='fullCv__left'>\r\n            <div className=\"avatar__container\">\r\n                <Avatar src={avatarsrc} className='avatar' />\r\n            </div>\r\n            <Contacts />\r\n            <Education />\r\n            <Skills />\r\n        </div>\r\n    )\r\n}\r\nexport default LeftSide","import React from 'react'\r\nimport './index.css'\r\nimport logo from '../../logo.svg';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { AppstateType } from '../../redux/store';\r\n\r\ntype ExpItemType = {\r\n    title: string\r\n    description: string\r\n    date: string\r\n    text: JSX.Element,\r\n    git: string\r\n}\r\nconst snapchatRu = (\r\n    <p>Приложение на ReactJs для создания мгновенных селфи используя  <span>веб-камеру</span>,\r\n    с возможонстью добавлять снимок в базу данных,\r\n    с последующим просмотром. <span>Аутенфикация</span> реализовани на <span>firebase</span>,\r\n    firestore использовал в качестве базы данных, Firebase Hosting  - для хостинга.\r\n    Глобальное состояние контролировал с  <span>Redux</span>,\r\n   Все компоненты  - функциональные, и написаны на <span>Hooks</span>.\r\n    Для UI части Я выбрал <span>MaterialUi</span></p>\r\n)\r\nconst snapchatEng = (\r\n    <p>ReactJs application for taking a snapshot using a <span>webcam</span>,\r\n    with the ability to add a snapshot to the database,\r\n    and then view it. <span>Authentication</span> using firebase was implemented,\r\n    firestore was used for the database, Firebase Hosting for hosting.\r\n    Global state controlled with <span>Redux</span>,\r\n    all components are made functional components using <span>Hooks</span>.\r\n    For the UI part I chose <span>MaterialUi</span></p>\r\n)\r\nconst linkedinRu = (\r\n    <p>Приложение клон LinkedIn, с возможностью авторизации.\r\n    Каждый пользователь может оставить сообщение, отредактировать его или удалить.\r\n    Создавая данное приложение,\r\n    я много взаимодействовал с базой данных <span>firebase</span>, и получил хороший опыт.\r\n   Управление бизнес логикой осуществляется с помощью<span>Redux</span> используя <span>Redux-toolkit</span>.\r\n        <span>React-Flip-Move</span> выбрал для создания анимации. Иконки брал из  <span>MaterialUi</span>.\r\n     Все компоненты  - функциональные, и написаны на <span>Hooks</span>.\r\n        <span>Firebase Hosting</span> использовал для финального деплоя.</p>\r\n)\r\nconst linkedinEng = (\r\n    <p>The application is a clone of LinkedIn, with the possibility of authorization.\r\n    Each user can leave their post, edit it or delete it.\r\n    While creating this application,\r\n    I interacted a lot with the database and got a good experience.\r\n    Business logical layer controlled with <span>Redux</span> using <span>Redux-toolkit</span>.\r\n    Use <span>React-Flip-Move</span> for animation. I took icons from  <span>MaterialUi</span>.\r\n    All components are functional and written in hooks.\r\n        <span>Firebase Hosting</span> was used for hosting.</p>\r\n)\r\nconst nasareactEng = (\r\n    <p>One of the more exhilarating Spa was created by me based on https://api.nasa.gov.\r\n    All styles and components are hand-crafted.\r\n    Hubble explores the universe 24 hours a day, 7 days a week.\r\n    That means it has observed some fascinating cosmic wonder every day of the year,\r\n    including on your birthday. In my application,\r\n        you can easily view a photo for any day from the start of filming.</p>\r\n)\r\nconst nasareactRu = (\r\n    <p>Приложение было создано мной на основе https://api.nasa.gov.\r\n    Все стили и компоненты написаны вручную без использования вспомогательных фреймворком.\r\n    Телескоп Хаббл исследует вселенную 24 часа в день 7 дней в неделю.\r\n    Hubble explores the universe 24 hours a day, 7 days a week.\r\n    Это значит что он наблюдал  какое-то завораживающее космическое чудо каждый день, включая ваши дни рождения.\r\n    В моем приложении вы можете легко просмотреть фото за любой день, со старта сьемки</p>\r\n)\r\nconst coctailapiEng = (\r\n    <p>The application in which you will find a cocktail recipe to your taste.\r\n         Written using <span>Hooks</span> and <span>coctail-api</span>.\r\n        The search is carried out both by the name of the cocktail and by the ingredients.</p>\r\n)\r\nconst coctailapiRu = (\r\n    <p>Приложение в котором вы найдете рецепт своего любимого коктейля.\r\n        Написано с использованием <span>Hooks</span> и <span>coctail-api</span>.\r\n        Возможно проводить поиск как по названию коктейля, так и по названию ингредиентов.</p>\r\n)\r\nconst propsforCoctail = {\r\n    title: 'Coctail SPA',\r\n    description: 'https://apekhnik.github.io/alcohol-react/',\r\n    date: '01.03.2020',\r\n    textRu: coctailapiRu,\r\n    textEng: coctailapiEng,\r\n    git: 'https://github.com/apekhnik/alcohol-react'\r\n}\r\nconst propsForNasa = {\r\n    title: 'Nasa-React',\r\n    description: 'https://apekhnik.github.io/nasa-react-api/',\r\n    date: '01.01.2020',\r\n    textRu: nasareactRu,\r\n    textEng: nasareactEng,\r\n    git: 'https://github.com/apekhnik/nasa-react-api'\r\n}\r\nconst propsForSnap = {\r\n    title: 'Snapchat-clone',\r\n    description: 'https://snapchat-eee21.web.app/',\r\n    date: '01.07.2020',\r\n    textRu: snapchatRu,\r\n    textEng: snapchatEng,\r\n    git: 'https://github.com/apekhnik/snapchat'\r\n\r\n}\r\nconst propsForLinked = {\r\n    title: 'LinkedIn-clone',\r\n    description: 'https://linkedin-clone-8fcf0.web.app',\r\n    date: '11.07.2020',\r\n    textRu: linkedinRu,\r\n    textEng: linkedinEng,\r\n    git: 'https://github.com/apekhnik/linkedIn'\r\n\r\n}\r\nconst ExpItem: React.FC<ExpItemType> = (props) => {\r\n    const { title, description, date, text, git } = props\r\n    return <div className='experience'>\r\n        <div className=\"experience__title\">\r\n            <h3>{title}</h3>\r\n        </div>\r\n        <div className='experience__description'>\r\n            <p><a href={description}\r\n                rel=\"noopener noreferrer\"\r\n                target=\"_blank\">\r\n                {description}\r\n            </a></p>\r\n            <span>{date}</span>\r\n        </div>\r\n        <div className=\"experience__about\">\r\n            <div>{text}</div>\r\n        </div>\r\n        <a href={git}\r\n            className='experience__details'\r\n            rel=\"noopener noreferrer\">More details</a>\r\n    </div>\r\n}\r\n\r\nconst RightSide: React.FC = () => {\r\n    const language = useSelector((state: AppstateType) => state.app.lang)\r\n    return (\r\n        <div className='fullCv__right'>\r\n            <div className=\"fullCv__right_header\">\r\n                <img src={logo} alt=\"\" className='header__logo' />\r\n                <h2>ALEX PEKHNIK</h2>\r\n                <p>FRONTRED DELEVOPER</p>\r\n\r\n            </div>\r\n            <div className=\"fullCv__right_experience\">\r\n                <h2>{language === 'Ru' ? 'Опыт' : 'EXPERIENCE'}</h2>\r\n\r\n                <ExpItem title={propsForSnap.title}\r\n                    description={propsForSnap.description}\r\n                    date={propsForSnap.date}\r\n                    text={language === 'Ru' ? propsForSnap.textRu : propsForSnap.textEng}\r\n                    git={propsForSnap.git} />\r\n                <ExpItem {...propsForNasa}\r\n                    title={propsForNasa.title}\r\n                    description={propsForNasa.description}\r\n                    date={propsForNasa.date}\r\n                    text={language === 'Ru' ? propsForNasa.textRu : propsForNasa.textEng}\r\n                    git={propsForNasa.git} />\r\n                <ExpItem title={propsForLinked.title}\r\n                    description={propsForLinked.description}\r\n                    date={propsForLinked.date}\r\n                    text={language === 'Ru' ? propsForLinked.textRu : propsForLinked.textEng}\r\n                    git={propsForLinked.git} />\r\n                <ExpItem title={propsforCoctail.title}\r\n                    description={propsforCoctail.description}\r\n                    date={propsforCoctail.date}\r\n                    text={language === 'Ru' ? propsforCoctail.textRu : propsforCoctail.textEng}\r\n                    git={propsforCoctail.git} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default RightSide","export default __webpack_public_path__ + \"static/media/react.6e05a812.svg\";","export default __webpack_public_path__ + \"static/media/typescript.b928e288.svg\";","export default __webpack_public_path__ + \"static/media/redux.0316e72c.svg\";","import { Divider } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { AppstateType } from '../redux/store'\r\nimport reactLogo from '../react.svg'\r\nimport ts from '../typescript.svg'\r\nimport redux from '../redux.svg'\r\ntype propsT = { showAbout: boolean }\r\n\r\nconst AboutMe = (props: propsT) => {\r\n    const language = useSelector((state: AppstateType) => state.app.lang)\r\n    const title = language === 'Ru' ? 'Обо мне' : 'About me'\r\n    const articleEng = 'I am 28 years old, before this age I have changed several professional branches. Having an IT education, I decided to take up this activity again. It is very easy to find contact with interlocutors, I settle conflict situations at the root, I do not see anything shameful in asking for help over something that is beyond your power at the moment. I want to break into a team from which I can adopt the best practices to become a sought-after specialist. When I see the fruits of my labor, worthy motivation, I cannot be stopped'\r\n    const articleRu = 'Мне 28 лет, до этого возраста сменил несколько профессиональных отраслей. Имея IT образование,решил вновь заняться этой деятельностью. Очень легко нахожу контакт с собеседниками, улаживаю конфликтные ситуации на корню, не вижу ничего постыдного в просьбе о помощи над тем, что тебе не под силу на данный момент. Хочу ворваться в команду от которой смогу перенять лучшие практики чтоб стать востребованным специалистом. Когда я вижу плоды своего труда + достойная мотивация, меня не остановить'\r\n    const article = language === 'Ru' ? articleRu : articleEng\r\n    return (\r\n        <div className='about' style={{ transform: `rotateY(${props.showAbout ? -180 : 0}deg)` }}>\r\n            <h3>{title}</h3>\r\n            <p>{article}</p>\r\n            <div className=\"about__footer\">\r\n                <div className=\"about__footer_icons\">\r\n                    <img src={reactLogo} alt=\"\" className='icons__item' />\r\n                    <img src={ts} alt=\"\" className='icons__item' />\r\n                    <img src={redux} alt=\"\" className='icons__item' />\r\n                </div>\r\n                <span>2020</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default AboutMe","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AppstateType } from '../../redux/store'\r\nimport './index.css'\r\nimport { cnahgeLang } from '../../redux/reducers/appReducer'\r\nimport LeftSide from './LeftSide'\r\nimport RightSide from './RightSide'\r\nimport './style.sass'\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Button from '@material-ui/core/Button';\r\nimport AboutMe from '../AboutMe'\r\n\r\ntype Props = {\r\n\r\n}\r\nconst FullCV: React.FC<Props> = (props) => {\r\n    const language = useSelector((state: AppstateType) => state.app.lang)\r\n    const [showAbout, setShouAbout] = useState(true)\r\n    const dispatch = useDispatch()\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <ButtonGroup disableElevation variant=\"contained\" orientation=\"vertical\" className='language__switcher'>\r\n                <Button onClick={() => dispatch(cnahgeLang('Ru'))} >Ru</Button>\r\n                <Button onClick={() => dispatch(cnahgeLang('Eng'))}>Eng</Button>\r\n                <Button onClick={() => setShouAbout(showAbout => !showAbout)}>{!showAbout ? 'hide' : 'show'}</Button>\r\n            </ButtonGroup>\r\n            <div className='fullCv' style={{ transform: `rotateY(${showAbout ? 0 : 180}deg)` }}>\r\n\r\n\r\n\r\n                <LeftSide />\r\n                <RightSide />\r\n\r\n            </div>\r\n            <AboutMe showAbout={showAbout} />\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default FullCV","\r\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport appReducer from './reducers/appReducer'\r\nconst rootReducer = combineReducers({\r\n    app: appReducer\r\n});\r\nexport type AppstateType = ReturnType<typeof rootReducer>\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\nexport default store;","import React from \"react\";\r\nimport Particles from \"react-particles-js\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useSpring, animated, config } from \"react-spring\";\r\nimport { AppstateType } from \"../../redux/store\";\r\nimport TypeIt from \"typeit-react\";\r\nimport \"./welcome.sass\";\r\nconst WelcomePage = () => {\r\n  const isOpen = useSelector((state) => state.app.showInfoPage);\r\n\r\n  const { x } = useSpring({\r\n    x: isOpen ? 0 : 100,\r\n    config: config.molasses,\r\n  });\r\n  return (\r\n    <div\r\n      className=\"check\"\r\n      style={{ pointerEvents: isOpen ? \"all\" : \"none\", overflow: \"hidden\" }}\r\n    >\r\n      <animated.div\r\n        style={{\r\n          transform: x.interpolate((x) => `translate3d(${x * -1}%,0,0)`),\r\n        }}\r\n        className=\"checkout_left\"\r\n      >\r\n        <Particles\r\n          params={{\r\n            particles: {\r\n              number: {\r\n                value: 130,\r\n                density: {\r\n                  enable: true,\r\n                  value_area: 800,\r\n                },\r\n              },\r\n              color: {\r\n                value: \"#ffffff\",\r\n              },\r\n              shape: {\r\n                type: \"circle\",\r\n                stroke: {\r\n                  width: 0,\r\n                  color: \"#000000\",\r\n                },\r\n                polygon: {\r\n                  nb_sides: 5,\r\n                },\r\n                image: {\r\n                  src: \"img/github.svg\",\r\n                  width: 100,\r\n                  height: 100,\r\n                },\r\n              },\r\n              opacity: {\r\n                value: 0.8,\r\n                random: true,\r\n                anim: {\r\n                  enable: true,\r\n                  speed: 1,\r\n                  opacity_min: 0.1,\r\n                  sync: false,\r\n                },\r\n              },\r\n              size: {\r\n                value: 10,\r\n                random: true,\r\n                anim: {\r\n                  enable: true,\r\n                  speed: 8,\r\n                  size_min: 5,\r\n                  sync: false,\r\n                },\r\n              },\r\n              line_linked: {\r\n                enable: false,\r\n                distance: 500,\r\n                color: \"#ffffff\",\r\n                opacity: 0.4,\r\n                width: 2,\r\n              },\r\n              move: {\r\n                enable: true,\r\n                speed: 3,\r\n                direction: \"none\",\r\n                random: true,\r\n                straight: true,\r\n                out_mode: \"bounce\",\r\n                bounce: true,\r\n                attract: {\r\n                  enable: false,\r\n                  rotateX: 600,\r\n                  rotateY: 1200,\r\n                },\r\n              },\r\n            },\r\n            interactivity: {\r\n              detect_on: \"canvas\",\r\n              events: {\r\n                onhover: {\r\n                  enable: false,\r\n                  mode: \"repulse\",\r\n                },\r\n                onclick: {\r\n                  enable: true,\r\n                  mode: \"push\",\r\n                },\r\n                resize: true,\r\n              },\r\n              modes: {\r\n                grab: {\r\n                  distance: 800,\r\n                  line_linked: {\r\n                    opacity: 1,\r\n                  },\r\n                },\r\n                bubble: {\r\n                  distance: 800,\r\n                  size: 80,\r\n                  duration: 2,\r\n                  opacity: 0.8,\r\n                },\r\n                repulse: {\r\n                  distance: 110,\r\n                  duration: 0.4,\r\n                },\r\n                push: {\r\n                  particles_nb: 4,\r\n                },\r\n                remove: {\r\n                  particles_nb: 2,\r\n                },\r\n              },\r\n            },\r\n            retina_detect: true,\r\n          }}\r\n        />\r\n        <TypeIt className=\"typeit\" element={\"h3\"}>\r\n          This will be typed in an H3 tag.\r\n        </TypeIt>\r\n        ;\r\n      </animated.div>\r\n      <animated.div\r\n        style={{ transform: x.interpolate((x) => `translate3d(${x}%,0,0)`) }}\r\n        className=\"checkout_right\"\r\n      >\r\n        <Particles\r\n          params={{\r\n            particles: {\r\n              number: {\r\n                value: 130,\r\n                density: {\r\n                  enable: true,\r\n                  value_area: 800,\r\n                },\r\n              },\r\n              color: {\r\n                value: \"#ffffff\",\r\n              },\r\n              shape: {\r\n                type: \"circle\",\r\n                stroke: {\r\n                  width: 0,\r\n                  color: \"#000000\",\r\n                },\r\n                polygon: {\r\n                  nb_sides: 5,\r\n                },\r\n                image: {\r\n                  src: \"img/github.svg\",\r\n                  width: 100,\r\n                  height: 100,\r\n                },\r\n              },\r\n              opacity: {\r\n                value: 0.8,\r\n                random: true,\r\n                anim: {\r\n                  enable: true,\r\n                  speed: 1,\r\n                  opacity_min: 0.1,\r\n                  sync: false,\r\n                },\r\n              },\r\n              size: {\r\n                value: 10,\r\n                random: true,\r\n                anim: {\r\n                  enable: true,\r\n                  speed: 8,\r\n                  size_min: 5,\r\n                  sync: false,\r\n                },\r\n              },\r\n              line_linked: {\r\n                enable: false,\r\n                distance: 500,\r\n                color: \"#ffffff\",\r\n                opacity: 0.4,\r\n                width: 2,\r\n              },\r\n              move: {\r\n                enable: true,\r\n                speed: 3,\r\n                direction: \"none\",\r\n                random: true,\r\n                straight: true,\r\n                out_mode: \"bounce\",\r\n                bounce: true,\r\n                attract: {\r\n                  enable: false,\r\n                  rotateX: 600,\r\n                  rotateY: 1200,\r\n                },\r\n              },\r\n            },\r\n            interactivity: {\r\n              detect_on: \"canvas\",\r\n              events: {\r\n                onhover: {\r\n                  enable: false,\r\n                  mode: \"repulse\",\r\n                },\r\n                onclick: {\r\n                  enable: true,\r\n                  mode: \"push\",\r\n                },\r\n                resize: true,\r\n              },\r\n              modes: {\r\n                grab: {\r\n                  distance: 800,\r\n                  line_linked: {\r\n                    opacity: 1,\r\n                  },\r\n                },\r\n                bubble: {\r\n                  distance: 800,\r\n                  size: 80,\r\n                  duration: 2,\r\n                  opacity: 0.8,\r\n                },\r\n                repulse: {\r\n                  distance: 110,\r\n                  duration: 0.4,\r\n                },\r\n                push: {\r\n                  particles_nb: 4,\r\n                },\r\n                remove: {\r\n                  particles_nb: 2,\r\n                },\r\n              },\r\n            },\r\n            retina_detect: true,\r\n          }}\r\n        />\r\n      </animated.div>\r\n    </div>\r\n  );\r\n};\r\nexport default WelcomePage;\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport FullCV from \"./components/FullCV/FullCV\";\nimport WelcomePage from \"./components/WelcomePage/WelcomPage\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setInfoShow, setInfoHide } from \"./redux/reducers/appReducer\";\nfunction App() {\n  const dispatch = useDispatch();\n  const isOpen = useSelector((state) => state.app.showInfoPage);\n  const toggle = () =>\n    isOpen ? dispatch(setInfoHide()) : dispatch(setInfoShow());\n  const btnClass = !isOpen ? \"menu_toggle__open\" : \"menu_toggle\";\n  const toggleShow = (\n    <button onClick={toggle} className={btnClass}>\n      <span></span>\n      <span></span>\n      <span></span>\n      <span></span>\n      {isOpen ? \"Open\" : \"Close\"}\n    </button>\n  );\n  return (\n    <div className=\"App\">\n      {toggleShow}\n      <WelcomePage />\n      <FullCV />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}